#include<unistd.h>
#include<stdio.h>
int main() {
  int count, j, n;
  int time, remaining;
  int flag = 0, timeQuantum = 10;
  int waitingTime = 0, turnAroundTime = 0;
  int arrivalTime[10], burstTime[10], rt[10];
  printf("\n\nEnter the total number of Process:\t ");
  scanf("%d", &n);
  remaining = n;
  for(count = 0; count < n; count++)
  {
    printf("Enter Arrival Time and Burst Time for Process Number %d :", count + 1);
    scanf("%d", &arrivalTime[count]);
    scanf("%d", &burstTime[count]);
    rt[count] = burstTime[count];
  }
  printf("Enter Time Quantum:%d\t", timeQuantum);
 
  printf("\n\nProcess\t | Turnaround Time | Waiting Time \n\n");
  for(time=0,count=0;remaining!=0;)
  {
    if(rt[count] <= timeQuantum && rt[count]>0)
    {
      time += rt[count];
      rt[count] = 0;
      flag=1;
    }
    else if(rt[count] > 0)
    {
      rt[count] -= timeQuantum;
      time += timeQuantum;
    }
    if(rt[count] == 0 && flag == 1)
    {
      remaining--;
      printf("P[%d]\t|\t%d\t|\t%d\n", count + 1,time - arrivalTime[count], time - arrivalTime[count] - burstTime[count]);
      waitingTime += time - arrivalTime[count] - burstTime[count];
      turnAroundTime += time - arrivalTime[count];
      flag=0;
    }
    if(count == n - 1)
      count = 0;
    else if(arrivalTime[count + 1] <= time)
      count++;
    else
      count = 0;
  }
  printf("\nAverage Waiting Time = %f\n", waitingTime * 1.0 / n);
  printf("Avg Turnaround Time = %f", turnAroundTime * 1.0 / n);
 
  return 0;
}
